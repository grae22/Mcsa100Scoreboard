@page
@model IndexModel
@{
    ViewData["Title"] = "MCSA-KZN 100 Climbs Scoreboard";
}

<html>
<head>
  <environment include="Development">
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css"/>
  </environment>
  <environment exclude="Development">
    <link rel="stylesheet" href="~/css/site.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css"/>
  </environment>
  <title>MCSA-KZN 100 Climbs Scoreboard</title>
</head>
<body>

<!-- Header banner -->
<div class="panel panel-default" style="background-color: rgba(255, 255, 255, 0.7);">
  <h1 align="center" class="page-heading">MCSA-KZN 100 Climbs</h1>
  <h4 align="center">~ @Model.Scoreboard.RankingByClimber.Keys.Sum(c => c.RouteCount) climbs logged ~</h4>
</div>

<!-- Ranking table -->
<p>
  <div>
    <table class="table table-striped table-sizetocontent table-bordered" style="background-color: white;">
      <thead>
      <tr>
        <th>Rank</th>
        <th>Climber</th>
        <th># Climbs</th>
        <th>Diff.</th>
      </tr>
      </thead>
      @{
        int bestRouteCount = Model.Scoreboard.RankingByClimber.OrderBy(x => x.Value).First().Key.RouteCount;

        foreach (var entry in @Model.Scoreboard.RankingByClimber.OrderBy(x => x.Value))
        {
          int rank = entry.Value;
          string name = entry.Key.Name;
          int routeCount = entry.Key.RouteCount;
          string toWin = (rank > 1 ? $"{bestRouteCount - routeCount}" : "-");

          <tr>
            <td style="text-align: center;">@rank</td>
            <td style="text-align: left;"><a href="#@name.Replace(" ", "")">@name</a></td>
            <td style="text-align: center;">@routeCount</td>
            <td style="text-align: center; font-size: smaller; vertical-align: middle;">-@toWin</td>
          </tr>
        }
      }
    </table>
  </div>
</p>

<!-- Climbers' routes -->
@{
  foreach (var entry in @Model.Scoreboard.RankingByClimber)
  {
    <p>
      <div>
        <a name="@entry.Key.Name.Replace(" ", "")"></a>
        <table class="table table-routes" style="background-color: white;">
          <thead><tr><th>#@entry.Value : @entry.Key.Name</th></tr></thead>
          @{
            int routeNumber = 1;

            foreach (var route in entry.Key.Routes)
            {
              <tr>
                <td style="text-align: left;">@routeNumber : @route</td>
              </tr>

              routeNumber++;
            }
          }
        </table>
      </div>
    </p>
  }
}

<button onclick="topFunction()" id="topBtn" title="Go to top">Top</button>

<environment include="Development">
  <script src="~/lib/jquery/dist/jquery.js"></script>
  <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
  <script src="~/js/jquery.backstretch.min.js"></script>
</environment>
<environment exclude="Development">
  <script src="~/lib/jquery/dist/jquery.js"></script>
  <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
  <script src="~/js/jquery.backstretch.min.js"></script>
</environment>
<script language="javascript">
  $.backstretch("images/background.jpg");

  // When the user scrolls down 20px from the top of the document, show the button
  window.onscroll = function() {
    scrollFunction();
  };

  function scrollFunction() {
    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
      document.getElementById("topBtn").style.display = "block";
    } else {
      document.getElementById("topBtn").style.display = "none";
    }
  }

  // When the user clicks on the button, scroll to the top of the document
  function topFunction() {
    document.body.scrollTop = 0; // For Safari
    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
  }
</script>
</body>
</html>